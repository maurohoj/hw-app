name: Build and Deploy to GKE

#Sempre que acontecer um commit na branch master o job ser√° startado
on:
  push:
    branches:
      - master

#Env Variables
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: primary
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: hello-server
  REPOSITORY: hello-app
  IMAGE: hello-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: poc-luizalabs

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GKE_CREDENTIALS }}'

    # gcloud configure docker
    - name: Configure Docker
      run: gcloud auth configure-docker --quiet
    
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_CREDENTIALS }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Auth Docker
    - name: Login Docker
      run: gcloud auth configure-docker us-central1-docker.pkg.dev
      
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
        
    # Set up kustomize
    #- name: Set up Kustomize
    #  run: |-
    #    curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #    chmod u+x ./kustomize

    #Install Kubectl    
    - name: Install Kube
      run: |- 
        sudo apt-get install -y apt-transport-https
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        sudo touch /etc/apt/sources.list.d/kubernetes.list
        echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl
    
    #Get credentials Kubernetes
    - name: GET credential Kube
      run: gcloud container clusters get-credentials primary --zone=us-central1-a

    #- name: Delete hello-app service
    #  run: kubectl delete service hello-server

    #Delete Deplyment of Hello-app
    - name: Delete hello-app deployment
      run: kubectl delete deployment hello-server    

    #Deploy new version of Hello-app
    - name: Deploy new version
      run: kubectl create deployment hello-server --image=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
      
    - name: Deploy Service
      run: kubectl expose deployment hello-server --type ClusterIP --port 80 #--target-port 8080
      
    # Deploy the Docker image to the GKE cluster
    #- name: Deploy
      #run: |-
        # replacing the image name in the k8s template
        #./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        #./kustomize build . | kubectl apply -f -
        #kubectl rollout status deployment/$DEPLOYMENT_NAME
        #kubectl get services -o wide
